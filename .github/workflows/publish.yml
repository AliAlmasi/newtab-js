name: Publish

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Enable Corepack & pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm -v

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Download SHA256 digest
        uses: actions/download-artifact@v4
        with:
          name: dist-sha256
          path: ./dist

      - name: Verify SHA256 digest
        run: sha256sum -c ./dist/dist.sha256

      - name: Determine and bump version if needed
        id: version
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          LAST_TAG=$(git tag --sort=-creatordate | head -n 1)

          echo "Current package.json version: $CURRENT_VERSION"
          echo "Last git tag: $LAST_TAG"

          if [ "$CURRENT_VERSION" = "$LAST_TAG" ]; then
            echo "Version unchanged, bumping patch..."
            NEW_VERSION=$(pnpm version patch --no-git-tag-version)

            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            git add package.json pnpm-lock.yaml
            git commit -m "chore: bump version to $NEW_VERSION"
            git push "https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD
          else
            echo "Using user-specified version: $CURRENT_VERSION"
            NEW_VERSION=$CURRENT_VERSION
          fi

          echo "current_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish ./dist --access public --no-git-checks --no-verify-access

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.current_version }}
          name: Release ${{ env.current_version }}
          generate-changelog: true
