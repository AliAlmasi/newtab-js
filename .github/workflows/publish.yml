name: Build & Publish

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout with full history and tags
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # 2️⃣ Setup Node.js and Corepack + pnpm
      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: Enable Corepack & pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm -v

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 4️⃣ Determine and bump version if needed
      - name: Determine and bump version
        id: version
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          LAST_TAG=$(git tag --sort=-creatordate | head -n 1 | sed 's/^v//')

          echo "Current version in package.json: $CURRENT_VERSION"
          echo "Last git tag: $LAST_TAG"

          if [ "$CURRENT_VERSION" = "$LAST_TAG" ] || [ -z "$LAST_TAG" ]; then
            echo "No new version detected, bumping patch..."
            NEW_VERSION=$(pnpm version patch --no-git-tag-version)

            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            git add package.json pnpm-lock.yaml
            git commit -m "chore: bump version to $NEW_VERSION"
            git push "https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD

            echo "bumped=true" >> $GITHUB_ENV
            echo "version=$NEW_VERSION" >> $GITHUB_ENV
          else
            echo "User manually set version, using $CURRENT_VERSION"
            echo "bumped=false" >> $GITHUB_ENV
            echo "version=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      # 5️⃣ Create Git tag if version was bumped
      - name: Create Git tag
        if: env.bumped == 'true'
        run: |
          git tag "v${{ env.version }}"
          git push "https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" --tags

      # 6️⃣ Create GitHub release (always)
      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ env.version }}"
          name: "Release v${{ env.version }}"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # 7️⃣ Publish to NPM
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --access public
