name: Build, Test, Version & Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3Ô∏è‚É£ Enable Corepack & pnpm
      - name: Enable Corepack & pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm -v

      # 4Ô∏è‚É£ Install dependencies
      - run: pnpm install --frozen-lockfile

      # 5Ô∏è‚É£ Run tests
      - run: pnpm test

      # 6Ô∏è‚É£ Build TypeScript
      - run: pnpm build

      # 7Ô∏è‚É£ Configure Git for CI
      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 8Ô∏è‚É£ Bump version, commit, tag, and push (conditional)
      - name: Bump version and push
        id: bump
        run: |
          NEW_VERSION=$(pnpm version patch --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

          git add package.json pnpm-lock.yaml
          git commit -m "chore: bump version to $NEW_VERSION"

          git push "https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD

          if [ "$GITHUB_EVENT_NAME" = "push" ] && [ "$GITHUB_REF" = "refs/heads/main" ]; then
              git tag "$NEW_VERSION"
              git push "https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" --tags
          else
              echo "Skipping tag creation: not a push to main branch"
          fi

      # 9Ô∏è‚É£ Conditionally create GitHub release
      - name: Create GitHub release
        if: github.event_name != 'workflow_dispatch'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.new_version }}
          name: Release ${{ env.new_version }}
          draft: false
          prerelease: false

      # üîü Publish to npm
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --access public
